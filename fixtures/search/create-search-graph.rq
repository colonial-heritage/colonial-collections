###############################
# Query for generating a search graph with dataset descriptions for testing
# Source of the query: https://triplestore.netwerkdigitaalerfgoed.nl/sparql?savedQueryName=Full%20dataset%20descriptions%20for%20publisher&owner=admin&execute
# Publish the query to https://colonial-heritage.triply.cc/data-hub/-/queries/create-search-graph/ for use in production
###############################

PREFIX cc: <https://colonialcollections.nl/search#> # Internal, undocumented ontology
PREFIX dcat: <http://www.w3.org/ns/dcat#>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX skolem: <https://triplydb.com/.well-known/genid/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>

CONSTRUCT {
  ?dataset a cc:Dataset ;
    cc:name ?title ;
    cc:publisher ?publisher ;
    cc:license ?license ;
    cc:description ?description ;
    cc:keyword ?keyword ;
    cc:mainEntityOfPage ?landingPage ;
    cc:dateCreated ?created ;
    cc:dateModified ?modified ;
    cc:datePublished ?issued ;
    cc:spatialCoverage ?place ;
    cc:genre ?genre ;
    # To allow for search actions based on name
    cc:publisherName ?publisherName ;
    cc:licenseName ?licenseName ;
    cc:placeName ?placeName ;
    cc:placeName ?placeAlternateName ;
    cc:genreName ?genreName .

  ?publisher a cc:Organization ;
    cc:name ?publisherName .

  ?license a cc:License ;
    cc:name ?licenseName .

  ?place a cc:Place ;
    cc:name ?placeName .

  ?genre a cc:DefinedTerm ;
    cc:name ?genreName .
}
WHERE {
  ?dataset a dcat:Dataset .

  ####################
  # Title
  ####################

  # Required property, but it may not exist in a specific language
  OPTIONAL {
    ?dataset dct:title ?tmpTitle
    FILTER(LANG(?tmpTitle) = "" || LANGMATCHES(LANG(?tmpTitle), "en"))
  }

  # TBD: add multi-language support?
  BIND(COALESCE(?tmpTitle, "(No name)"@en) AS ?title)

  ####################
  # License
  ####################

  # Required property, but the license name may not exist in a specific language
  ?dataset dct:license ?tmpLicense .

  # Some licenses are provided as strings (!), not IRIs - convert
  BIND(IRI(?tmpLicense) AS ?license)

  OPTIONAL {
    ?license a foaf:Document ;
      foaf:name ?tmpLicenseName .
    FILTER(LANG(?tmpLicenseName) = "" || LANGMATCHES(LANG(?tmpLicenseName), "en"))
  }

  # TBD: add multi-language support?
  BIND(COALESCE(?tmpLicenseName, "(No name)"@en) AS ?licenseName)

  ####################
  # Publisher
  ####################

  # Required property, but the publisher name may not exist in a specific language
  ?dataset dct:publisher ?publisher .

  OPTIONAL {
    ?publisher a foaf:Organization ;
      foaf:name ?tmpPublisherName .
    FILTER(LANG(?tmpPublisherName) = "" || LANGMATCHES(LANG(?tmpPublisherName), "en"))
  }

  # TBD: add multi-language support?
  BIND(COALESCE(?tmpPublisherName, "(No name)"@en) AS ?publisherName)

  ####################
  # Description
  ####################

  OPTIONAL {
    ?dataset dct:description ?description
    FILTER(LANG(?description) = "" || LANGMATCHES(LANG(?description), "en"))
  }

  ####################
  # Keyword
  ####################

  OPTIONAL {
    ?dataset dcat:keyword ?keyword
    FILTER(LANG(?keyword) = "" || LANGMATCHES(LANG(?keyword), "en"))
  }

  ####################
  # Landing page
  ####################

  OPTIONAL {
    ?dataset dcat:landingPage ?landingPage
    # The NDE Dataset Register allows blank nodes for the landing page.
    # TriplyDB turns these into skolemized IRIs. Remove these for Elasticsearch
    FILTER(!STRSTARTS(STR(?landingPage), STR(skolem:)))
  }

  OPTIONAL { ?dataset dct:created ?created }
  OPTIONAL { ?dataset dct:modified ?modified }
  OPTIONAL { ?dataset dct:issued ?issued }

  ####################
  # Place / spatial coverage / location
  ####################

  OPTIONAL {
    ?dataset dct:spatial ?place .
    ?place a skos:Concept ;
      skos:prefLabel ?placeName ;
      skos:inScheme "Geografie" . # The NMVW thesaurus doesn't have a IRI to identify the scheme

    OPTIONAL { ?place skos:altLabel ?placeAlternateName }
  }

  ####################
  # Genre
  ####################

  OPTIONAL {
    ?dataset dct:type ?genre .
    ?genre a skos:Concept ;
      skos:prefLabel ?genreName ;
      skos:inScheme <http://vocab.getty.edu/aat/> .
    FILTER(LANG(?genreName) = "" || LANGMATCHES(LANG(?genreName), "en")) # TBD: which languages to support?
  }
}
